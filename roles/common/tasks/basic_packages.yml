- name: Install basic packages
  apt:
    name:
      - curl
      - btop
      - htop
      - mtr-tiny
      - msmtp
      - msmtp-mta
      - prometheus-node-exporter
      - micro
      - vnstat
      - unzip
      - iftop
      - iotop-c
      - tcpdump
      - strace
      - apt-transport-https
      - ncdu
      - systemd-journal-remote
      - tmux
      - systemd-cron
      - tldr
      - fish
      - unattended-upgrades
      - nano
    state: present

# temp not avail in lts
- name: Install resolved
  apt:
    name:
      - systemd-resolved
    state: present
  ignore_errors: true

#- name: override dir for glances
#  file:
#    path: /etc/systemd/system/glances.service.d
#    state: directory
#    owner: root
#    group: root
#    mode: 0755

#- name: override glances
#  copy:
#    content: |
#      [Service]
#      ExecStart=
#      ExecStart=/usr/bin/glances -s -B '::' --disable-autodiscover
#    dest: /etc/systemd/system/glances.service.d/override.conf
#    owner: root
#    group: root
#    mode: 0644
#  notify: restart glances

- name: Enable backports debian
  apt_repository:
    repo: deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main contrib non-free non-free-firmware
    state: present
  when: ansible_distribution == "Debian"

- name: Pin backports debian
  copy:
    content: |
      Package: *
      Pin: release n={{ ansible_distribution_release }}-backports
      Pin-Priority: 500
    dest: /etc/apt/preferences.d/backports
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution == "Debian"

- name: Pin backports ubuntu
  copy:
    content: |
      Package: *
      Pin: release a={{ ansible_distribution_release }}-backports
      Pin-Priority: 500
    dest: /etc/apt/preferences.d/backports
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution == "Ubuntu"


# - name: Remove lxd, snapd, core20
#   community.general.snap:
#     name: "{{ item }}"
#     state: absent
#   with_items:
#     - lxd
#     - core20
#     - core18
#     - google-cloud-cli
#     - snapd
#   when: ansible_distribution == "Ubuntu"

- name: purge snapd
  apt:
    name: snapd
    state: absent
  when: ansible_distribution == "Ubuntu"
  ignore_errors: true

- name: disable and stop services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop:
    - multipathd
    - modemmanager
    - udisks2
    - uuidd
    - chrony
    - wpa_supplicant
    - cron
    - unattended-upgrades
    - rsyslog
    - postfix
    - motd-news.timer
  when: item in ansible_facts.services.keys()
